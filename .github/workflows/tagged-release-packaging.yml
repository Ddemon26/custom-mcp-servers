name: Package MCP Servers

on:
  push:
    tags:
      - '*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          cache-dependency-path: |
            archive-mcp/package-lock.json
            browser-mcp/package-lock.json
            dotnet-mcp/package-lock.json
            git-mcp/package-lock.json
            curl-mcp/package-lock.json
            diceroll-mcp/package-lock.json
            easyview-mcp/package-lock.json
            filedownload-mcp/package-lock.json
            ffmpeg-mcp/package-lock.json
            html-mcp/package-lock.json
            ytdlp-mcp/package-lock.json
            imagemagick-mcp/package-lock.json
            json-mcp/package-lock.json
            markdown-mcp/package-lock.json
            osrslookup-mcp/package-lock.json
            time-mcp/package-lock.json

      - name: Install dependencies and build servers
        run: |
          set -eo pipefail
          for dir in archive-mcp browser-mcp curl-mcp diceroll-mcp easyview-mcp filedownload-mcp ffmpeg-mcp html-mcp imagemagick-mcp dotnet-mcp git-mcp json-mcp markdown-mcp osrslookup-mcp time-mcp ytdlp-mcp; do
            echo "Installing dependencies for $dir"
            (cd "$dir" && npm ci)
            echo "Building $dir"
            (cd "$dir" && npm run build)
          done

      - name: Prepare release archives
        run: |
          set -eo pipefail
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          mkdir -p artifacts
          for dir in archive-mcp browser-mcp curl-mcp diceroll-mcp easyview-mcp filedownload-mcp ffmpeg-mcp html-mcp imagemagick-mcp dotnet-mcp git-mcp json-mcp markdown-mcp osrslookup-mcp time-mcp ytdlp-mcp; do
            echo "Cleaning $dir before packaging"
            rm -rf "$dir/node_modules"
            archive="artifacts/${dir}-${TAG_NAME}.zip"
            echo "Creating ${archive}"
            zip -r "$archive" "$dir"
          done

      - name: Publish release assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          files: artifacts/*.zip
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
